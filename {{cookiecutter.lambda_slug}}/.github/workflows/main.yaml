name: Main Build and Deploy

on:

  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      image_tag:
        type: string
        description: Image tag to use
        required: true

concurrency:
  group: {{ cookiecutter.lambda_slug }}-{%raw%}${{ github.ref }}{%endraw%}-1
  cancel-in-progress: true

jobs:

  version:
    name: Get the version
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: {%raw%}${{github.event.inputs.image_tag}}{%endraw%}
    outputs:
      image_tag: {%raw%}${{ steps.set-version.outputs.image_tag }}{%endraw%}
    #permissions to write back to github repo
    permissions:
      contents: write

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Get Release Version
        id: semantic
        uses: docker://ghcr.io/codfish/semantic-release-action:v2
        with:
          additional_packages: |
            ['@semantic-release/changelog']
        env:
          GITHUB_TOKEN: {%raw%}${{ secrets.GITHUB_TOKEN }}{%endraw%}
      - name: Set Returned Version
        id: set-version
        run: |
          echo "${RELEASE_VERSION}"
          echo "image_tag=${RELEASE_VERSION}" >> $GITHUB_OUTPUT
          
  

  build:
    name: Build Image
    runs-on: ubuntu-latest
    needs: [version]
    env:
      IMAGE_TAG: {%raw%}${{needs.version.outputs.image_tag}}{%endraw%}

    steps:

      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: {%raw%}${{ secrets.AWS_ACCESS_KEY_ID }}{%endraw%}
          aws-secret-access-key: {%raw%}${{ secrets.AWS_SECRET_ACCESS_KEY }}{%endraw%}
          aws-region: {%raw%}${{ secrets.AWS_REGION }}{%endraw%}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: {%raw%}${{ steps.login-ecr.outputs.registry }}{%endraw%}
          ECR_REPOSITORY: {%raw%}${{ github.event.repository.name }}{%endraw%}
        run: |
          cd {{ cookiecutter.safe_name }}/{{ cookiecutter.safe_name }}
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
          

  deploy:
    name: Deploy via CDK
    runs-on: ubuntu-latest
    needs: [build, version]
    env:
      IMAGE_TAG: {%raw%}${{needs.version.outputs.image_tag}}{%endraw%}

    steps:
      - name: Echo image tag
        run: |
          echo "image tag: $IMAGE_TAG"

      - name: Check out code
        uses: actions/checkout@v3

      - name: cdk deploy
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: 'deploy'
          cdk_stack: '{{ cookiecutter.application_name }}Stack'
          cdk_args: "--require-approval never"
          actions_comment: false
        env:
          AWS_ACCESS_KEY_ID: {%raw%}${{ secrets.AWS_ACCESS_KEY_ID }}{%endraw%}
          AWS_SECRET_ACCESS_KEY: {%raw%}${{ secrets.AWS_SECRET_ACCESS_KEY }}{%endraw%}
          AWS_DEFAULT_REGION: {%raw%}${{ secrets.AWS_REGION}}{%endraw%}
